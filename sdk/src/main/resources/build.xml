<?xml version="1.0" encoding="UTF-8"?>
<project name="suite-sdk" default="usage">

    <description>
        Suite Client SDK
    </description>

    <target name="usage">
        <echo message=""/>
        <echo message="Suite Client SDK Commands"/>
        <echo message=""/>
        <echo message=" create     --&gt; create a new application"/>
        <echo message=" debug      --&gt; run an application in debug mode"/>
        <echo message=" deploy     --&gt; deploy an existing application"/>
    </target>

    <property name="sdk.home" location="."/>
    <property name="app.proxy.geoserver" value=""/>
    <property name="app.port" value="8080"/>
    <property name="suite.domain" value="localhost"/>
    <property name="suite.port" value="8080"/>
    <property name="suite.container" value="tomcat6x"/>
    <property name="suite.username" value="manager"/>
    <property name="suite.password" value=""/>

    <target name="checkpath">
        <condition property="app.path.set">
            <isset property="app.path"/>
        </condition>
        <fail message="Missing app path." unless="${app.path.set}"/>
        <condition property="app.path.exists">
            <available file="${app.path}" type="dir"/>
        </condition>
        <basename property="app.name" file="${app.path}"/>
    </target>

    <target name="create" depends="checkpath">
        <fail message="Directory '${app.path}' already exists.  Specify the name for a new app directory." if="${app.path.exists}"/>
        <mkdir dir="${app.path}"/>
        <copy todir="${app.path}">
            <fileset dir="${sdk.home}/src/main/resources/client"/>
        </copy>
    </target>

    <target name="debug" depends="checkpath">
        <fail message="Directory '${app.path}' doesn't exist." unless="${app.path.exists}"/>
        <java classname="org.ringojs.tools.launcher.Main" failonerror="true" fork="true">
            <classpath>
                <fileset dir="${sdk.home}/lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
            <sysproperty key="app.static" path="${app.path}"/>
            <sysproperty key="app.debug" value="1"/>
            <sysproperty key="app.proxy.geoserver" value="${app.proxy.geoserver}"/>
            <sysproperty key="ringo.home" path="${sdk.home}"/>
            <sysproperty key="ringo.modulepath" path="${sdk.home}/lib"/>
            <arg path="${sdk.home}/src/main/resources/server/main.js"/>
            <arg line="-p ${app.port}"/>
        </java>
    </target>

    <target name="build" depends="checkpath">
        <fail message="Directory '${app.path}' doesn't exist." unless="${app.path.exists}"/>
        <mkdir dir="${sdk.home}/build/${app.name}"/>
        <copy todir="${sdk.home}/build/${app.name}">
            <fileset dir="${sdk.home}/src/main/webapp"/>
            <filterset>
                <filter token="APP_NAME" value="${app.name}"/>
            </filterset>
        </copy>
        <!-- copy Ext resources -->
        <copy todir="${sdk.home}/build/${app.name}/src/ext">
            <fileset dir="${app.path}/src/ext"/>
        </copy>
        <!-- copy OpenLayers resources -->
        <copy todir="${sdk.home}/build/${app.name}/src/openlayers/theme">
            <fileset dir="${app.path}/src/openlayers/theme"/>
        </copy>
        <!-- copy GeoExt resources -->
        <copy todir="${sdk.home}/build/${app.name}/src/geoext/resources">
            <fileset dir="${app.path}/src/geoext/resources"/>
        </copy>
        <!-- copy gxp resources -->
        <copy todir="${sdk.home}/build/${app.name}/src/gxp/theme">
            <fileset dir="${app.path}/src/gxp/theme"/>
        </copy>
        <!-- build app js -->
        <mkdir dir="${sdk.home}/build/${app.name}/lib"/>
        <java classname="org.ringojs.tools.launcher.Main" failonerror="true">
            <classpath>
                <fileset dir="${sdk.home}/lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
            <sysproperty key="ringo.home" path="${sdk.home}/"/>
            <sysproperty key="ringo.modulepath" path="${sdk.home}/lib"/>
            <arg path="${sdk.home}/lib/buildkit/lib/buildkit/build.js"/>
            <arg line="-o ${sdk.home}/build/${app.name}/lib ${app.path}/buildjs.cfg"/>
        </java>
        <!-- copy additional app resources -->
        <copy todir="${sdk.home}/build/${app.name}/theme">
            <fileset dir="${app.path}/theme"/>
        </copy>
        <copy todir="${sdk.home}/build/${app.name}">
            <fileset dir="${app.path}">
                <include name="*"/>
            </fileset>
        </copy>
    </target>

    <target name="package" depends="build">
        <war destfile="${sdk.home}/build/${app.name}.war" needxmlfile="false">
            <fileset dir="${sdk.home}/build/${app.name}"/>
        </war>
    </target>
    
    <target name="initcargo">
        <taskdef resource="cargo.tasks">
            <classpath>
                <fileset dir="${sdk.home}/lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </taskdef>
    </target>

    <target name="deploy" depends="package">
        <taskdef resource="cargo.tasks">
            <classpath>
                <fileset dir="${sdk.home}/lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </taskdef>
        <cargo containerId="${suite.container}" action="redeploy" type="remote">
            <configuration type="runtime">
                <property name="cargo.hostname" value="${suite.domain}"/>
                <property name="cargo.servlet.port" value="${suite.port}"/>
                <property name="cargo.remote.username" value="${suite.username}"/>
                <property name="cargo.remote.password" value="${suite.password}"/>
                <deployable type="war" file="${sdk.home}/build/${app.name}.war">
                    <property name="context" value="${app.name}"/>
                </deployable>
            </configuration>
        </cargo>
    </target>

</project>
