<project name="build" default="build-all">

   <property name="gs.dir" value="geoserver"/>
   <property name="gs.flags" value=""/>

   <property name="gt.dir" value="geotools"/>
   <property name="gt.version" value="2.7-SNAPSHOT"/>
   <property name="gt.flags" value=""/>

   <property name="gwc.dir" value="geowebcache"/>
   <property name="gwc.version" value="1.3-RC3"/>
   <property name="gwc.flags" value=""/>

   <condition property="mvn_exec" value="${mvn.exec}">
     <isset property="mvn.exec"/>
   </condition>
   <condition property="mvn.exec" value="mvn.bat" else="mvn">
     <and>
       <not>
         <isset property="mvn_exec"/>
       </not>
       <os family="windows"></os>
     </and>
   </condition>

   <condition property="mvn_settings" value="-s ${mvn.settings}" else="">
       <isset property="mvn.settings"/>
   </condition>

   <condition property="mvn_offline" value="-o" else="">
     <isset property="mvn.offline"/>
   </condition>

   <!--target name="build-all" depends="checkout-all, build-gt, build-gwc, build-gs"-->
   <target name="build-all" depends="build-gt, build-gwc, build-gs">
   </target>

   <target name="build-gt" unless="skip.gt"> 
     <antcall target="mvn">
        <param name="dir" value="${gt.dir}"/>
        <param name="flags" value="-DskipTests -Dall ${gt.flags}"/>
        <param name="targets" value="clean install"/>
     </antcall>
   </target>

   <target name="build-gs" unless="skip.gs"> 
     <antcall target="mvn">
        <param name="dir" value="${gs.dir}/src"/>
        <param name="flags" value="-DskipTests -DconfigDirectory=${basedir}/${gs.dir}/data -P proxy,printing,monitoring,dbconfig,ftp,allExtensions ${gs.flags}"/>
        <param name="targets" value="clean install"/>
     </antcall>
   </target>

   <target name="build-gwc" unless="skip.gwc"> 
     <antcall target="mvn">
        <param name="dir" value="${gwc.dir}/geowebcache"/>
        <param name="flags" value="-DskipTests -Dgt.version=${gt.version}"/>
        <param name="targets" value="clean install"/>
     </antcall>
     <antcall target="mvn">
        <param name="dir" value="${gwc.dir}/geowebcache"/>
        <param name="flags" value="-DgroupId=org.geowebcache -DartifactId=geowebcache -Dversion=${gwc.version} -Dpackaging=war -Dfile=web/target/geowebcache.war ${gwc.flags}"/>
        <param name="targets" value="install:install-file"/>
     </antcall>
   </target>

   <target name="checkout-all" depends="checkout-gs,checkout-gt,checkout-gwc"/>
   <target name="checkout-gs">
     <antcall target="checkout">
       <param name="git.url" value="${gs.repo}"/>
       <param name="git.branch" value="${gs.branch}"/>
       <param name="git.rev" value="${gs.rev}"/>
       <param name="dir" value="${gs.dir}"/>
     </antcall>
   </target>
   <target name="checkout-gt">
     <antcall target="checkout">
       <param name="git.url" value="${gt.repo}"/>
       <param name="git.branch" value="${gt.branch}"/>
       <param name="git.rev" value="${gt.rev}"/>
       <param name="dir" value="${gt.dir}"/>
     </antcall>
   </target>
   <target name="checkout-gwc">
     <antcall target="checkout">
       <param name="git.url" value="${gwc.repo}"/>
       <param name="git.branch" value="${gwc.branch}"/>
       <param name="git.rev" value="${gwc.rev}"/>
       <param name="dir" value="${gwc.dir}"/>
     </antcall>
   </target>

   <target name="checkout">
     <echo message="Pulling ${git.branch} from ${git.url} (ignore fatal warning)"/>
     <exec executable="git" failonerror="false">
        <arg line="clone -b ${git.branch} ${git.url} ${dir}"/>
     </exec>
     <exec executable="git" dir="${dir}" failonerror="false">
        <arg line="branch --track ${git.branch} origin/${git.branch}"/>
     </exec>
     <exec executable="git" dir="${dir}" failonerror="true">
        <arg line="checkout ${git.branch}"/>
     </exec>
     <exec executable="git" dir="${dir}" failonerror="true">
        <arg line="pull origin ${git.branch}"/>
     </exec>
     <!--antcall target="checkout-rev"/-->
  </target>

  <target name="checkout-rev">
     <echo message="Checking out ${git.rev}"/>
     <exec executable="git" dir="${dir}" failonerror="true">
        <arg line="checkout ${git.rev}"/>
     </exec>
  </target>

  <target name="mvn">
     <echo message="${mvn_exec} ${mvn_settings} ${mvn_offline} ${flags} ${targets}"/>
     <exec executable="${mvn_exec}" dir="${dir}" failonerror="true">
        <arg line="${mvn_settings} ${mvn_offline} ${flags} ${targets}"/>
     </exec>
  </target>

</project>
